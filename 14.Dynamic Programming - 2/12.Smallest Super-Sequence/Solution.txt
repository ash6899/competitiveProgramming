#include <bits/stdc++.h>

using namespace std;

int go(string s1, string s2, int i, int j, int** mem){
	int m = s1.size();
	int n = s2.size();

	//cout << m<<" "<<n << '\n';

	if (i > m-1)
	{
		return n-j;
	}

	if (j > n-1)
	{
		return m-i;
	}

	if (mem[i][j]!=-1)
	{
		return mem[i][j];
	}

	if (s1[i] == s2[j])
	{
		mem[i][j] = 1 + go(s1, s2, i+1, j+1, mem);
		return mem[i][j];
	}else{
		mem[i][j] = min(1+go(s1, s2, i+1, j, mem), 1+go(s1, s2, i, j+1, mem));
		return mem[i][j];
	}

}

int smallestSuperSequence(char str1[], int len1, char str2[], int len2) { 
  string s1 = "";
  string s2 = "";

  for (int i = 0; i < len1; ++i)
  {
  	s1 += str1[i];
  }

  for (int i = 0; i < len2; ++i)
  {
  	s2 += str2[i];
  }

  int** mem = new int*[len1+1];

  for (int i = 0; i < len1+1; ++i)
  {
  	mem[i] = new int[len2+1];
  	for (int j = 0; j < len2+1; ++j)
  	{
  		mem[i][j] = -1;
  	}
  }


  return go(s1, s2, 0, 0, mem);

  

}
