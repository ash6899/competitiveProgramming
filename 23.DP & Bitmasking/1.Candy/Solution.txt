
long long solve(int like[][MAXN],int N)
{
    int n=N;
	int* dp = new int[1<<n];
    for(int i=0;i<(1<<n);i++){
       dp[i] = 0; 
    }
    dp[0]=1;
    for(int mask=0;mask<((1<<n)-1);mask++){
        int temp = mask;
        //count no. of set bits
        int k = 0;
        while(temp>0){
            if((temp%2)==1){
                k++;
            }
            temp = temp/2;
        }
        for(int j=0;j<n;j++){
            if(!(mask&(1<<j)) && like[k][j]){
                dp[mask|(1<<j)] += dp[mask];
            }
        }
    }
    return dp[(1<<n)-1];
}