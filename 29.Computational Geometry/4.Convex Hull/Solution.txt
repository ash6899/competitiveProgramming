#include<bits/stdc++.h>
using namespace std;
struct Point{
    int x,y;
};
bool tochange(Point p,Point q,Point r){
    int x1 = p.x-q.x;
    int y1 = p.y-q.y;
    int x2 = r.x-q.x;
    int y2 = r.y-q.y;
    int value = x1*y2-y1*x2;
    return value>0;
}
void convexHull(Point points[],int n){
    vector<Point> hull;
    //leftmost point
    int left = 0;
    for(int i=1;i<n;i++){
        if(points[i].x<points[left].x){
            left = i;
        }
    }
    int p = left;
    do{
        hull.push_back(points[p]);
        int q = (p+1)%n;
        for(int i=0;i<n;i++){
            if(tochange(points[p],points[q],points[i])){
                q=i;
            }
        }
        p=q;
    }while(p!=left);
    for(int i=0;i<hull.size();i++){
        cout<<hull[i].x<<" "<<hull[i].y<<endl;
    }

}
int main(){
    int n;
    cin>>n;
    Point points[n];
    int x[n],y[n];
    for(int i=0;i<n;i++){
        cin>>x[i];
    }
    for(int i=0;i<n;i++){
        cin>>y[i];
    }
    for(int i=0;i<n;i++){
        points[i].x=x[i];
        points[i].y=y[i];
    }
    convexHull(points,n);
    return 0;
}
